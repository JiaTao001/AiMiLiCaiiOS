//
//  ProjectDetailView.m
//  YuanXin_Project
//
//  Created by Yuanin on 16/1/13.
//  Copyright © 2016年 yuanxin. All rights reserved.
//

#import "ProjectDetailView.h"


@implementation ProductDetailCell

- (instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString *)reuseIdentifier {
    self = [super initWithStyle:style reuseIdentifier:reuseIdentifier];
    
    if (self) {
        self.selectionStyle = UITableViewCellSelectionStyleNone;
        
        if ([self respondsToSelector:@selector(layoutMargins)]) {
            self.layoutMargins = UIEdgeInsetsMake(0, BIG_MARGIN_DISTANCE, 0, BIG_MARGIN_DISTANCE);
        }
        [self.contentView addSubview:self.title];
        [self.contentView addSubview:self.detail];
        [self.contentView setNeedsUpdateConstraints];
        [self.contentView updateConstraintsIfNeeded];
    }
    
    return self;
}
- (void)updateConstraints {
    [super updateConstraints];
    
    if (self.title.translatesAutoresizingMaskIntoConstraints) {
        self.title.translatesAutoresizingMaskIntoConstraints = self.detail.translatesAutoresizingMaskIntoConstraints = NO;
        
        NSArray *hCon = [NSLayoutConstraint constraintsWithVisualFormat:@"H:|-(margin)-[_title]-(>=margin)-[_detail]-(margin)-|" options:0 metrics:@{@"margin":@(BIG_MARGIN_DISTANCE)} views:NSDictionaryOfVariableBindings(_detail, _title)];
        NSLayoutConstraint *vDetailCon = [NSLayoutConstraint constraintWithItem:_detail attribute:NSLayoutAttributeCenterY relatedBy:NSLayoutRelationEqual toItem:self.contentView attribute:NSLayoutAttributeCenterY multiplier:1.0f constant:0];
        NSLayoutConstraint *vTitleCon = [NSLayoutConstraint constraintWithItem:_title attribute:NSLayoutAttributeCenterY relatedBy:NSLayoutRelationEqual toItem:self.contentView attribute:NSLayoutAttributeCenterY multiplier:1.0f constant:0];
        
        
        [self.contentView addConstraints:hCon];
        [self.contentView addConstraint:vDetailCon];
        [self.contentView addConstraint:vTitleCon];
    }
}

- (void)configCellWithKeyInfo:(NSDictionary *)keyInfo dictionary:(NSDictionary *)aDic {
    
    self.title.text  = keyInfo[PRODUCT_DETAIL_TITLE];
    self.detail.text = [CommonTools convertToStringWithObject:aDic[keyInfo[PRODUCT_DETAIL_KEY]]];
    
    if ([@"maxbuyvote" isEqualToString:keyInfo[PRODUCT_DETAIL_KEY]] & (0 == self.detail.text.integerValue)) {
        self.detail.text = @"不限";
    }
    
    [self.title sizeToFit];
    [self.detail sizeToFit];
}

- (UILabel *)title {
    
    if (!_title) {
        UILabel *title  = [[UILabel alloc] init];
        title.font      = [UIFont systemFontOfSize:MIN_FONT_SIZE];
        title.textColor = Font_Shallow_Gray;
        [title setContentCompressionResistancePriority:UILayoutPriorityRequired forAxis:UILayoutConstraintAxisHorizontal];
        
        _title = title;
    }
    return _title;
}
- (UILabel *)detail {
    
    if (!_detail) {
        UILabel *detail      = [[UILabel alloc] init];
        detail.font          = [UIFont systemFontOfSize:MIN_FONT_SIZE];
        detail.textColor     = Font_Normal_Gray;
        detail.textAlignment = NSTextAlignmentRight;
        detail.numberOfLines = 0;
        
        _detail = detail;
    }
    return _detail;
}
@end




@interface ProjectDetailView() <UITableViewDataSource, UITableViewDelegate>

@property (strong, nonatomic) UITableView    *tableView;
@property (strong, nonatomic) NSMutableArray *productKeyInfo;
@end

@implementation ProjectDetailView

- (instancetype)initWithFrame:(CGRect)frame {
    self = [super initWithFrame:frame];
    if (self) {
        
        [self configureDefaultValue];
    }
    return self;
}
- (instancetype)initWithCoder:(NSCoder *)aDecoder {
    self = [super initWithCoder:aDecoder];
    if (self) {
        
        [self configureDefaultValue];
    }
    return self;
}

- (void)configureDefaultValue {
    
    [self addSubview:self.tableView];
}
- (void)layoutSubviews {
    [super layoutSubviews];
    
    self.tableView.frame = self.bounds;
}


#pragma mark - UITableView dataSource & delegate
- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
    
    return self.productKeyInfo.count;
}
- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    
    ProductDetailCell *cell = [tableView dequeueReusableCellWithIdentifier:PRODUCT_CELL_IDENTIFIER];
    
    [cell configCellWithKeyInfo:self.productKeyInfo[indexPath.row] dictionary:self.projectInfo];
    return cell;
}

- (UITableView *)tableView {
    
    if (!_tableView) {
        UITableView *tableView = [[UITableView alloc] initWithFrame:self.bounds style:UITableViewStylePlain];
        
        [tableView registerClass:[ProductDetailCell class] forCellReuseIdentifier:PRODUCT_CELL_IDENTIFIER];
        
        tableView.showsVerticalScrollIndicator = NO;
        tableView.tableFooterView = [UIView new];
        tableView.rowHeight = 44;
        tableView.separatorColor  = Single_Line_Gray;
        tableView.separatorInset  = UIEdgeInsetsZero;
        if ([tableView respondsToSelector:@selector(layoutMargins)]) {
            tableView.layoutMargins = UIEdgeInsetsZero;
        }
        
        tableView.delegate   = self;
        tableView.dataSource = self;
        
        _tableView = tableView;
    }
    return _tableView;
}

- (NSMutableArray *)productKeyInfo {
    
    if (!_productKeyInfo) {
        NSString *path = [[NSBundle mainBundle] pathForResource:PRODUCT_KEY_PLIST ofType:nil];
        _productKeyInfo = [[NSMutableArray alloc] initWithContentsOfFile:path];
    }
    return _productKeyInfo;
}


- (void)setProjectInfo:(NSDictionary *)projectInfo {
    _projectInfo = projectInfo;
    
    if (![projectInfo[@"guaranteecompany"] length]) {
        
        [self.productKeyInfo removeObjectAtIndex:5];
    }
    if (![projectInfo[@"debtstype"] length]) {
        
        [self.productKeyInfo removeObjectAtIndex:3];
    }
    if (![projectInfo[@"collateral"] length]) {
        
        [self.productKeyInfo removeObjectAtIndex:2];
    }
    
    [self.tableView reloadData];
}

@end
