//
//  UserTouchIDVC.m
//  YuanXin_Project
//
//  Created by Yuanin on 2017/5/9.
//  Copyright © 2017年 yuanxin. All rights reserved.
//

#import "UserTouchIDVC.h"
#import "UserinfoManager.h"
#import <LocalAuthentication/LocalAuthentication.h>
#import "AiMiApplication.h"
@interface UserTouchIDVC ()

@end

@implementation UserTouchIDVC

- (void)viewDidLoad {
    [super viewDidLoad];
    
    // 获取当前时间
    NSDate *  senddate=[NSDate date];
    NSDateFormatter  *dateformatter=[[NSDateFormatter alloc] init];
    [dateformatter setDateFormat:@"yyy"];
    NSString *  yearString = [dateformatter stringFromDate:senddate];
    [dateformatter setDateFormat:@"MM"];
    NSString *  monthString = [dateformatter stringFromDate:senddate];
    [dateformatter setDateFormat:@"dd"];
    NSString *  dayString = [dateformatter stringFromDate:senddate];
    [dateformatter setDateFormat:@"EEE"];
    
    NSString *  weekString = [dateformatter stringFromDate:senddate];
    self.weekLB.text = weekString;
//    int year = [yearString intValue];
    
//    int month = [monthString intValue];
    self.monthLB.text = monthString;
//    int day = [dayString intValue];
    self.dayLB.text = dayString;
    self.gestureVCBtn.hidden = ![AiMiApplication haveGesturePassword];
    
    
    
    
    
    
    // Do any additional setup after loading the view.
}
- (IBAction)authTouchID:(UIButton *)sender {
    NSUserDefaults *userDefaults = [NSUserDefaults standardUserDefaults];
    LAContext *context = [[LAContext alloc] init];
    if ([userDefaults boolForKey:@"open_touch_id"] & [context canEvaluatePolicy:LAPolicyDeviceOwnerAuthenticationWithBiometrics error:nil]) {
        
        [context evaluatePolicy:LAPolicyDeviceOwnerAuthenticationWithBiometrics localizedReason:@"需要验证您的指纹来确认您的身份信息" reply:^(BOOL success, NSError * _Nullable error) {
            if (success) {
                
                dispatch_async(dispatch_get_main_queue(), ^{
//                    [self authGestureSuccess];
                    if (self.callBack) {
                        self.callBack(0);
                    }
                });
            }
        }];
    }
}
- (IBAction)changeAccount:(id)sender {
    [[UserinfoManager sharedUserinfo] logout];
    
//    @weakify(self)
//    if (self.callBack) self.callBack(self_weak_, kGesturePasswordOperationFailure);
//    
//    self.isCancel      = NO;
//    [self.navigationController popToRootViewControllerAnimated:YES];
    if (self.callBack) {
        self.callBack(1);
    }
}
- (IBAction)gestureVC:(id)sender {
    if (self.callBack) {
        self.callBack(2);
    }
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}



@end
