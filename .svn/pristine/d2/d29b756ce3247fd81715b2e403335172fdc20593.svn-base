//
//  FixedHomepageItem.m
//  YuanXin_Project
//
//  Created by Yuanin on 16/4/19.
//  Copyright © 2016年 yuanxin. All rights reserved.
//

#import "HomepageItemView.h"

@interface FixedHomepageItem()

@property (weak, nonatomic) IBOutlet UIImageView *imageView;
@property (weak, nonatomic) IBOutlet UILabel *titleLabel;
@property (weak, nonatomic) IBOutlet UILabel *subheadingLabel;

@end

@implementation FixedHomepageItem

- (instancetype)initWithCoder:(NSCoder *)aDecoder {
    self = [super initWithCoder:aDecoder];
    
    if (self) {
        [[NSBundle mainBundle] loadNibNamed:NSStringFromClass([self class]) owner:self options:nil];
        
        [self addSubview:self.view];
    }
    return self;
}

- (void)layoutSubviews {
    [super layoutSubviews];
    
    self.view.frame = self.bounds;
}

- (void)setImageName:(NSString *)imageName {
    
    _imageName = imageName;
    self.imageView.image = [UIImage imageNamed:imageName];
}
- (void)setTitle:(NSString *)title {
    
    _title = title;
    self.titleLabel.text = title;
}
- (void)setSubheading:(NSString *)subheading {
    
    _subheading = subheading;
    self.subheadingLabel.text  = subheading;
}

@end


@interface HomepageItemView ()

@property (weak, nonatomic) IBOutlet UIView *announcementView;
@property (weak, nonatomic) IBOutlet UIButton *announcement;
@property (strong, nonatomic) CABasicAnimation *scrollAnimation;

@property (copy, nonatomic) void(^selectBlock)(NSInteger index);

@property (assign, nonatomic) BOOL needChangeAnimationState;

@end

@implementation HomepageItemView

+ (instancetype)homepageItemViewWithSelectBlock:(void(^)(NSInteger index)) selectBlock {
    
    HomepageItemView *result = [[[NSBundle mainBundle] loadNibNamed:NSStringFromClass([self class]) owner:nil options:nil] firstObject];
    
    if (![result isKindOfClass:[self class]]) return nil;

    result.selectBlock = selectBlock;
    result.needChangeAnimationState = NO;
    result.translatesAutoresizingMaskIntoConstraints = YES;
    return result;
}

- (void)layoutSubviews {
    [super layoutSubviews];
    
    if (self.needChangeAnimationState) {
        [self changeAnimationState];
    }
}

- (void)setAnnouncementInfo:(AnnouncementInfo *)announcementInfo {
    _announcementInfo = announcementInfo;
    [self.announcement setTitle:announcementInfo.title forState:UIControlStateNormal];

    if (self.window) {
        [self changeAnimationState];
    } else {
        self.needChangeAnimationState = YES;
    }
}

- (void)changeAnimationState {
    
    if ([self shouldUseScrollAnimation]) {
        [self startAnimation];
    } else {
        [self.announcementView.layer removeAllAnimations];
    }
    self.needChangeAnimationState = NO;
}

- (IBAction)selectItem:(UITapGestureRecognizer *)sender {
    
    if (self.selectBlock) {
        self.selectBlock(sender.view.tag);
    }
}
- (IBAction)checkAnnoucement {
    
    if (self.checkSpecificAnnoucement) {
        self.checkSpecificAnnoucement(self.announcementInfo);
    }
}
- (IBAction)checkAllAnnoucements {
    
    if (self.checkAllAnnoucemtes) {
        self.checkAllAnnoucemtes();
    }
}

- (BOOL)shouldUseScrollAnimation {
    
    return [self textWidth] > self.announcementView.width;
}
- (CGFloat)textWidth {
    
    return [self.announcementInfo.title boundingRectWithSize:CGSizeMake(CGFLOAT_MAX, self.announcementView.height) options:NSStringDrawingUsesFontLeading attributes:@{NSFontAttributeName:self.announcement.titleLabel.font} context:nil].size.width;
}

- (void)startAnimation {
    
    self.scrollAnimation.fromValue = [NSValue valueWithCGRect:CGRectMake(-self.announcementView.width, 0, [self textWidth], self.announcement.height)];
    self.scrollAnimation.toValue   = [NSValue valueWithCGRect:CGRectMake([self textWidth], 0, [self textWidth], self.announcement.height)];
    
    [self.announcementView.layer removeAllAnimations];
    [self.announcement.layer addAnimation:self.scrollAnimation forKey:@"scrollAnimation"];
    self.needChangeAnimationState = NO;
}

- (CABasicAnimation *)scrollAnimation {
    
    if (!_scrollAnimation) {
        
        CABasicAnimation *animation = [CABasicAnimation animationWithKeyPath:@"bounds"];
        animation.duration = 10;
        animation.removedOnCompletion = NO;
        animation.repeatCount = NSIntegerMax;
        _scrollAnimation = animation;
    }
    return _scrollAnimation;
}

@end
