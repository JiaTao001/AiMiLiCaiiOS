//
//  FixedHomepageItem.m
//  YuanXin_Project
//
//  Created by Yuanin on 16/4/19.
//  Copyright © 2016年 yuanxin. All rights reserved.
//

#import "HomepageItemView.h"

@interface FixedHomepageItem()

@property (weak, nonatomic) IBOutlet UIImageView *imageView;
@property (weak, nonatomic) IBOutlet UILabel *titleLabel;
@property (weak, nonatomic) IBOutlet UILabel *subheadingLabel;

@end

@implementation FixedHomepageItem

- (instancetype)initWithCoder:(NSCoder *)aDecoder {
    self = [super initWithCoder:aDecoder];
    
    if (self) {
        [[NSBundle mainBundle] loadNibNamed:NSStringFromClass([self class]) owner:self options:nil];
        
        [self addSubview:self.view];
    }
    return self;
}

- (void)layoutSubviews {
    [super layoutSubviews];
    
    self.view.frame = self.bounds;
}

- (void)setImageName:(NSString *)imageName {
    
    _imageName = imageName;
    self.imageView.image = [UIImage imageNamed:imageName];
}
- (void)setTitle:(NSString *)title {
    
    _title = title;
    self.titleLabel.text = title;
}
- (void)setSubheading:(NSString *)subheading {
    
    _subheading = subheading;
    self.subheadingLabel.text  = subheading;
}

@end


@interface HomepageItemView ()

@property (weak, nonatomic) IBOutlet UIView *announcementView;
@property (weak, nonatomic) IBOutlet UIButton *announcement;
@property (strong, nonatomic) CABasicAnimation *scrollAnimation;

@property (copy, nonatomic) void(^selectBlock)(NSInteger index);

@property (assign, nonatomic) BOOL needChangeAnimationState;
@property (weak, nonatomic) IBOutlet NSLayoutConstraint *viewHeight;

@end

@implementation HomepageItemView

+ (instancetype)homepageItemViewWithIsLogin:(BOOL)islogin ProductInfo:(RecommendProductInfo *)aInfo  SelectBlock:(void(^)(NSInteger index)) selectBlock {
    
    HomepageItemView *result = [[[NSBundle mainBundle] loadNibNamed:NSStringFromClass([self class]) owner:nil options:nil] firstObject];
    
    NSMutableAttributedString *noteStr = [[NSMutableAttributedString alloc] initWithString:@"注册即送998元加息券"];
    NSRange redRange = NSMakeRange([[noteStr string] rangeOfString:@"998元加息券"].location, [[noteStr string] rangeOfString:@"998元加息券"].length);
    [noteStr addAttribute:NSForegroundColorAttributeName value:[UIColor redColor] range:redRange];

    
    [result.zhuceLB setAttributedText:noteStr];
    [result.zhuceLB sizeToFit];
    
    
    NSMutableAttributedString *noteStr2 = [[NSMutableAttributedString alloc] initWithString:@"新手推荐｜新手专享，更高收益"];
    NSRange redRange2 = NSMakeRange([[noteStr2 string] rangeOfString:@"新手推荐"].location, [[noteStr2 string] rangeOfString:@"新手推荐"].length);
    [noteStr2 addAttribute:NSForegroundColorAttributeName value:[UIColor blueColor] range:redRange2];
    
    
    [result.xinshouLB setAttributedText:noteStr2];
    [result.xinshouLB sizeToFit];


    
    if (islogin) {
        result.zhuceView.hidden = YES;
        result.zhuceViewheigth.constant = 0;
        result.zichanView.hidden = NO;
        result.zichanviewHeight.constant = 110;
        result.viewHeight.constant = 475 - 74;
        
    }else{
        result.zhuceView.hidden = NO ;
        result.zhuceViewheigth.constant = 74;
        result.zichanView.hidden = YES;
        result.zichanviewHeight.constant = 0;
        result.viewHeight.constant = 475 - 110;
    }
    
//    result.replyMethodLB.text     = aInfo.replyMethod;
    
    result.reteLB.text  =[NSString stringWithFormat:@"%.2f",[aInfo.annualInterest floatValue]] ;
    result.timeLB.text      = [aInfo theTermOfProduct];
    result.moneyLB.text     = [aInfo theRestOfShare];

    if (![result isKindOfClass:[self class]]) return nil;
    result.selectBlock = selectBlock;
    result.needChangeAnimationState = NO;
    result.translatesAutoresizingMaskIntoConstraints = YES;
    return result;
}
- (void)referceUIWithIslog:(BOOL)isLog{
    if (isLog) {
        self.zhuceView.hidden = YES;
        self.zhuceViewheigth.constant = 0;
        self.zichanView.hidden = NO;
        self.zichanviewHeight.constant = 110;
        self.viewHeight.constant = 475 - 74;
        
    }else{
        self.zhuceView.hidden = NO ;
        self.zhuceViewheigth.constant = 74;
        self.zichanView.hidden = YES;
        self.zichanviewHeight.constant = 0;
        self.viewHeight.constant = 475 - 110;
    }
}

- (void)layoutSubviews {
    [super layoutSubviews];
    
    if (self.needChangeAnimationState) {
        [self changeAnimationState];
    }
}

- (void)setAnnouncementInfo:(AnnouncementInfo *)announcementInfo {
    _announcementInfo = announcementInfo;
    [self.announcement setTitle:announcementInfo.title forState:UIControlStateNormal];

    if (self.window) {
        [self changeAnimationState];
    } else {
        self.needChangeAnimationState = YES;
    }
}

- (void)changeAnimationState {
    
    if ([self shouldUseScrollAnimation]) {
        [self startAnimation];
    } else {
        [self.announcementView.layer removeAllAnimations];
    }
    self.needChangeAnimationState = NO;
}

//- (IBAction)selectItem:(UITapGestureRecognizer *)sender {
//    
//    if (self.selectBlock) {
//        self.selectBlock(sender.view.tag);
//    }
//}

- (IBAction)checkAnnoucement {
    
    if (self.checkSpecificAnnoucement) {
        self.checkSpecificAnnoucement(self.announcementInfo);
    }
}
- (IBAction)checkAllAnnoucements {
    
    if (self.checkAllAnnoucemtes) {
        self.checkAllAnnoucemtes();
    }
}
- (IBAction)selectSafeGuard:(UITapGestureRecognizer *)sender {
        if (self.selectBlock) {
            self.selectBlock(sender.view.tag);
        }
    
}

- (IBAction)TouziBtnClicked:(UIButton *)sender {
    if (self.selectBlock) {
        self.selectBlock(sender.tag);
    }
    
    
}
- (IBAction)zhuceBtnClicked:(UIButton *)sender {
    if (self.selectBlock) {
        self.selectBlock(sender.tag);
    }
    
}

- (BOOL)shouldUseScrollAnimation {
    
    return [self textWidth] > self.announcementView.width;
}
- (CGFloat)textWidth {
    
    return [self.announcementInfo.title boundingRectWithSize:CGSizeMake(CGFLOAT_MAX, self.announcementView.height) options:NSStringDrawingUsesFontLeading attributes:@{NSFontAttributeName:self.announcement.titleLabel.font} context:nil].size.width;
}

- (void)startAnimation {
    
//    self.scrollAnimation.fromValue = [NSValue valueWithCGRect:CGRectMake(-self.announcementView.width, 0, [self textWidth], self.announcement.height)];
//    self.scrollAnimation.toValue   = [NSValue valueWithCGRect:CGRectMake([self textWidth], 0, [self textWidth], self.announcement.height)];
    
    self.scrollAnimation.fromValue = [NSValue valueWithCGRect:CGRectMake(0, -35, [self textWidth], self.announcement.height)];
    self.scrollAnimation.toValue   = [NSValue valueWithCGRect:CGRectMake(0, 35, [self textWidth], self.announcement.height)];
    
    [self.announcementView.layer removeAllAnimations];
    [self.announcement.layer addAnimation:self.scrollAnimation forKey:@"scrollAnimation"];
    self.needChangeAnimationState = NO;
}

- (CABasicAnimation *)scrollAnimation {
    
    if (!_scrollAnimation) {
        
        CABasicAnimation *animation = [CABasicAnimation animationWithKeyPath:@"bounds"];
        animation.duration = 3;
        animation.removedOnCompletion = NO;
        animation.repeatCount = NSIntegerMax;
        _scrollAnimation = animation;
    }
    return _scrollAnimation;
}

@end
